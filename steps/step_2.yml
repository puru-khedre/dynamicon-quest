id: create_utility_function_dynamicon_smith
learningObjectives:
  - Creating utility functions which generate data URL, and converting canvas into data URL
hints:
  - "you can create image by using canvas"
  - "you can use this [canvas](https://yarnpkg.com/package/canvas)liabrary, this package includes a html canvas implementation for **Node.js**"
startFlow:
  do:
    - actionId: bot_message
      params:
        person: lucca
        messages:
          - text: ":instruction[Install canvas package in backend]."
            delay: 500
          - text: ":instruction[Make a utils folder inside `backend/`], and then make a file that exports required functions inside the utils directory so that it can be imported and used."
            delay: 2500
          - text: ":instruction[Make sure the name of the file is **getUserAvatar.js**.]{block=true}"
            delay: 1000
          - text: "Remember that the function should return base64 data URL of a randomly generated canvas based on the user's info. When you're done with that, :instruction[open a PR]."
            delay: 2300

trigger:
  type: github_pr_lifecycle_status
  flowNode:
    switch:
      key: "${eventType}"
      cases:
        github_pr_opened:
          do:
            - actionId: github_pr_comment
              params:
                person: lucca
                message: "Looks like you're ready to show off your hard work! Let's see what magic you've done."
            - actionId: bot_message
              params:
                person: lucca
                messages:
                  - text: "Looks like you're ready to show off your hard work! Let's see what magic you've done."
                    delay: 2000
        github_pr_workflow_complete_success:
          if:
            conditions:
            - conditionId: github_is_file_added
              params:
                fileName: backend/utils/getUserAvatar.js
            - conditionId: github_does_file_contain
              params:
                fileName: backend/package.json
                regex: "canvas"
            then:
              do:
                - actionId: github_pr_approve
                - actionId: github_pr_comment
                  params:
                    person: lucca
                    message: "Great job! Your can merge PR"
                - actionId: bot_message
                  params:
                    person: lucca
                    messages:
                      - text: "Great job! Your can merge PR"
                        delay: 400
            else:
              do:
                - actionId: github_pr_reject
                  params: 
                    person: lucca
                    message: "Looks like you haven't created **getUserAvatar.js** file properly, or haven't install **canvas**."
                - actionId: bot_message
                  params: 
                    person: lucca
                    messages: 
                      - text: "Looks like you haven't created **getUserAvatar.js** file properly, or haven't install **canvas**."
                        delay: 1000
                      - text: "install canvas and create getUserAvatar.js
                        delay: 400
        github_pr_workflow_complete_failure:
          do:
            - actionId: bot_message
              params:
                person: lucca
                messages:
                  - text: "Oh no, it looks like your code is failing some tests."
                    delay: 1200
        github_pr_merged:
          do:
            - actionId: finish_step
